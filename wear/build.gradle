apply plugin: 'com.android.application'

Properties props = new Properties()
try {
    props.load(new FileInputStream(signingProperties))
} catch (FileNotFoundException e) {
}

android {
    compileSdkVersion commonCompileSdkVersion
    buildToolsVersion "${commonBuildToolsVersion}"
    publishNonDefault true

    defaultConfig {
        applicationId "vig.sensortracker"
        minSdkVersion 25
        targetSdkVersion commonTargetSdkVersion
        versionCode appVersionCode * 10 + 1
        versionName "${appVersionName}"
    }

    signingConfigs {
        release {
            if (!props.isEmpty()) {
                storeFile file(props['RELEASE_STORE_FILE'])
                storePassword props['RELEASE_STORE_PASSWORD']
                keyAlias props['RELEASE_KEY_ALIAS']
                keyPassword props['RELEASE_KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (!props.isEmpty()) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.google.android.support:wearable:${wearableVersion}"
    compile "com.google.android.gms:play-services-wearable:${playServicesVersion}"
    compile "org.apache.commons:commons-lang3:${apacheCommonsVersion}"
    compile "com.google.android.gms:play-services-auth:${playServicesVersion}"
    compile("com.google.api-client:google-api-client-android:${googleAPIVersion}") {
        exclude group: 'org.apache.httpcomponents'
    }
    compile("com.google.apis:google-api-services-sheets:v4-rev469-${googleAPIVersion}") {
        exclude group: 'org.apache.httpcomponents'
    }
    compile project(':shared')
}
